[
  {
    "type": "openFile",
    "path": "src/components/jokes.tsx"
  },
  {
    "type": "goto",
    "line": 23
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand"
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "type": "goto",
    "line": 40
  },
  {
    "type": "typeText",
    "text": [
      "",
      "const HookedJokes: React.FC<JokesProps> = ({ url }) => {",
      "}",
      "",
      "export default HookedJokes;"
    ]
  },
  {
    "type": "goto",
    "line": 45
  },
  {
    "type": "command",
    "command": "editor.action.commentLine"
  },
  {
    "type": "goto",
    "line": 41,
    "column": 999
  },
  {
    "type": "command",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "type": "goto",
    "line": 42
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "type": "typeText",
    "text": [
      "  const [{ jokes, loading }, setState] = React.useState(initialState);",
      ""
    ]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },

  {
    "type": "typeText",
    "text": [
      "",
      "  React.useEffect(() => {",
      "    const fetchJokes = async () => {",
      "      const rsp = await fetch(url);",
      "      const jokes = await rsp.json();",
      "      setState({ jokes, loading: false });",
      "    };",
      "    fetchJokes();",
      "  }, [url]);",
      ""
    ]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },

  {
    "type": "goto",
    "line": 42
  },
  {
    "type": "command",
    "command": "cursorDownSelect",
    "repeat": 10
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "type": "goto",
    "line": 40
  },
  {
    "type": "typeText",
    "text": ["", "const useJokes = (url: string): JokesState => {", "", "}", ""]
  },
  {
    "type": "goto",
    "line": 42
  },
  {
    "type": "command",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "type": "typeText",
    "text": ["", "  return { loading, jokes };"]
  },
  {
    "type": "goto",
    "line": 57
  },
  {
    "type": "typeText",
    "text": ["  const { loading, jokes } = useJokes(url);", ""]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },

  {
    "type": "openFile",
    "path": "src/App.tsx"
  },
  {
    "type": "goto",
    "line": 4
  },
  {
    "type": "command",
    "command": "editor.action.commentLine"
  },
  {
    "type": "goto",
    "line": 5
  },
  {
    "type": "typeText",
    "text": [
      "import Loading from \"./components/loading\";",
      "",
      "const Jokes = React.lazy(() => import(\"./components/jokes\"));",
      ""
    ]
  },
  {
    "type": "goto",
    "line": 1,
    "column": 13
  },
  {
    "type": "typeText",
    "text": [", { Suspense }"]
  },
  {
    "type": "goto",
    "line": 13,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "     <Suspense fallback={<Loading />}>"]
  },
  {
    "type": "goto",
    "line": 26,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "     </Suspense>"]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },

  {
    "type": "createFile",
    "path": "src/components/jokes-resource.ts"
  },
  {
    "type": "typeText",
    "text": [
      "// import { unstable_createResource } from \"react-cache\";",
      "import { unstable_createResource } from \"./react-cache.development\";",
      "",
      "const jokesResource = unstable_createResource(async (url: string) => {",
      "  const rsp = await fetch(url);",
      "  const jokes = await rsp.json();",
      "  return jokes;",
      "});",
      "",
      "export default jokesResource;"
    ]
  },

  {
    "type": "openFile",
    "path": "src/components/jokes.tsx"
  },
  {
    "type": "goto",
    "line": 3
  },
  {
    "type": "typeText",
    "text": ["import jokesResource from \"./jokes-resource\";", ""]
  },
  {
    "type": "goto",
    "line": 58
  },
  {
    "type": "command",
    "command": "cursorDownSelect",
    "repeat": 5
  },
  {
    "type": "command",
    "command": "editor.action.commentLine"
  },
  {
    "type": "goto",
    "line": 63
  },
  {
    "type": "typeText",
    "text": ["", "  const jokes = jokesResource.read(url) as Joke[];", ""]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },

  {
    "skip": true,
    "type": "typeText",
    "text": [
      "// This code is typed by Presentation Buddy",
      "",
      "class Calculator {",
      "  add(x, y) {",
      "    return x + y;",
      "  }",
      "}"
    ]
  },
  {
    "skip": true,
    "type": "goto",
    "line": 4,
    "column": 1
  },
  {
    "skip": true,
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": true,
    "type": "command",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "skip": true,
    "type": "createFile",
    "path": "src/demo.js"
  },
  {
    "skip": true,
    "type": "typeText",
    "text": [
      "// This code is typed by Presentation Buddy",
      "",
      "const Calculator = require('./calculator');",
      "",
      "const calc = new Calculator();",
      "const sum = calc.add(1, 2)",
      "console.log(`The sum of 1 + 2 = ${sum}`);"
    ]
  },
  {
    "skip": true,
    "type": "openFile",
    "path": "src/calculator.js"
  },
  {
    "skip": true,
    "type": "command",
    "command": "cursorBottom"
  },
  {
    "skip": true,
    "type": "typeText",
    "text": ["", "module.exports = Calculator;"]
  }
]
